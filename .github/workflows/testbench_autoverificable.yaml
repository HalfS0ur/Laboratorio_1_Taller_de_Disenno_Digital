name: Prueba verificacion de archivos
run-name: ${{ github.actor }} is checking the files
on: [push]
jobs: 
  changes:
    runs-on: ubuntu-latest
    outputs:
      ejercicio1 : ${{ steps.filter.outputs.ejercicio1 }}
      ejercicio2: ${{ steps.filter.outputs.ejercicio2 }}
      ejercicio3: ${{ steps.filter.outputs.ejercicio3 }}
      ejercicio4_full_adder : ${{ steps.filter.outputs.ejercicio4_full_adder }}
      ejercicio4_ripple_carry_adder : ${{ steps.filter.outputs.ejercicio4_ripple_carry_adder }}
      ejercicio4_carry_lookahead_adder : ${{ steps.filter.outputs.ejercicio4_carry_lookahead_adder }}
      ejercicio5: ${{ steps.filter.outputs.ejercicio5 }}

    steps:
    - name: checking out repository code
      uses: actions/checkout@v4
    - name: checking for changes
      uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          ejercicio1:
            - 'ejercicio1/**/*.sv'
          ejercicio2:
            - 'ejercicio2/**/*.sv'
          ejercicio3:
            - 'ejercicio3/**/*.sv'
          ejercicio4_full_adder:
            - 'ejercicio4/fa/**/*.sv'
          ejercicio4_ripple_carry_adder:
            - 'ejercicio4/rca/**/*.sv'
          ejercicio4_carry_lookahead_adder:
            - 'ejercicio4/cla/**/*.sv'
          ejercicio5:
            - 'ejercicio5/**/*.sv'


  ejercicio1:
    needs: changes
    if: ${{ needs.changes.outputs.ejercicio1 == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ejercicio1/testing
    steps:
      - name: Checking out repository code
        uses: actions/checkout@v4
      - name: Installing iverilog
        run: sudo apt-get install iverilog
      - name: Setting up Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Installing dependencies
        run: pip install cocotb==1.8.1
      - run: make
      - name: Checking for errors
        uses: jannekem/run-python-script-action@v1.7
        with:
          script: |
            import xml.etree.ElementTree as ET
            import sys
            try:
              tree = ET.parse("ejercicio1/testing/results.xml")
              root = tree.getroot()
              if "Test failed" in ET.tostring(root).decode():
                print(f"Se encontraron errores durante la ejecución del testbench.")
                sys.exit(1)
              else:
                print(f"Ejecución del testbench exitosa.")
                sys.exit(0)
            except Exception as e:
              print("An error occurred:", e)
              sys.exit(1)

  ejercicio2:
    needs: changes
    if: ${{ needs.changes.outputs.ejercicio2 == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ejercicio2/testing
    steps:
      - name: Checking out repository code
        uses: actions/checkout@v4
      - name: Installing iverilog
        run: sudo apt-get install iverilog
      - name: Setting up Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Installing dependencies
        run: pip install cocotb==1.8.1
      - run: make
      - name: Checking for errors
        uses: jannekem/run-python-script-action@v1.7
        with:
          script: |
            import xml.etree.ElementTree as ET
            import sys
            try:
              tree = ET.parse("ejercicio2/testing/results.xml")
              root = tree.getroot()
              if "Test failed" in ET.tostring(root).decode():
                print(f"Se encontraron errores durante la ejecución del testbench.")
                sys.exit(1)
              else:
                print(f"Ejecución del testbench exitosa.")
                sys.exit(0)
            except Exception as e:
              print("An error occurred:", e)
              sys.exit(1)

  ejercicio3:
    needs: changes
    if: ${{ needs.changes.outputs.ejercicio3 == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ejercicio3/testing
    steps:
      - name: Checking out repository code
        uses: actions/checkout@v4
      - name: Installing iverilog
        run: sudo apt-get install iverilog
      - name: Setting up Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Installing dependencies
        run: pip install cocotb==1.8.1
      - run: make
      - name: Checking for errors
        uses: jannekem/run-python-script-action@v1.7
        with:
          script: |
            import xml.etree.ElementTree as ET
            import sys
            try:
              tree = ET.parse("ejercicio3/testing/results.xml")
              root = tree.getroot()
              if "Test failed" in ET.tostring(root).decode():
                print(f"Se encontraron errores durante la ejecución del testbench.")
                sys.exit(1)
              else:
                print(f"Ejecución del testbench exitosa.")
                sys.exit(0)
            except Exception as e:
              print("An error occurred:", e)
              sys.exit(1)

  ejercicio4_full_adder:
    needs: changes
    if: ${{ needs.changes.outputs.ejercicio4_full_adder == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ejercicio4/fa/testing
    steps:
      - name: Checking out repository code
        uses: actions/checkout@v4
      - name: Installing iverilog
        run: sudo apt-get install iverilog
      - name: Setting up Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Installing dependencies
        run: pip install cocotb==1.8.1
      - run: make
      - name: Checking for errors
        uses: jannekem/run-python-script-action@v1.7
        with:
          script: |
            import xml.etree.ElementTree as ET
            import sys
            try:
              tree = ET.parse("ejercicio4/fa/testing/results.xml")
              root = tree.getroot()
              if "Test failed" in ET.tostring(root).decode():
                print(f"Se encontraron errores durante la ejecución del testbench.")
                sys.exit(1)
              else:
                print(f"Ejecución del testbench exitosa.")
                sys.exit(0)
            except Exception as e:
              print("An error occurred:", e)
              sys.exit(1)


  ejercicio4_ripple_carry_adder:
    needs: changes
    if: ${{ needs.changes.outputs.ejercicio4_ripple_carry_adder == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ejercicio4/rca/testing
    steps:
      - name: Checking out repository code
        uses: actions/checkout@v4
      - name: Installing iverilog
        run: sudo apt-get install iverilog
      - name: Setting up Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Installing dependencies
        run: pip install cocotb==1.8.1
      - run: make
      - name: Checking for errors
        uses: jannekem/run-python-script-action@v1.7
        with:
          script: |
            import xml.etree.ElementTree as ET
            import sys
            try:
              tree = ET.parse("ejercicio4/rca/testing/results.xml")
              root = tree.getroot()
              if "Test failed" in ET.tostring(root).decode():
                print(f"Se encontraron errores durante la ejecución del testbench.")
                sys.exit(1)
              else:
                print(f"Ejecución del testbench exitosa.")
                sys.exit(0)
            except Exception as e:
              print("An error occurred:", e)
              sys.exit(1)


  ejercicio4_carry_lookahead_adder:
    needs: changes
    if: ${{ needs.changes.outputs.ejercicio4_carry_lookahead_adder == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ejercicio4/cla/testing
    steps:
      - name: Checking out repository code
        uses: actions/checkout@v4
      - name: Installing iverilog
        run: sudo apt-get install iverilog
      - name: Setting up Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Installing dependencies
        run: pip install cocotb==1.8.1
      - run: make
      - name: Checking for errors
        uses: jannekem/run-python-script-action@v1.7
        with:
          script: |
            import xml.etree.ElementTree as ET
            import sys
            try:
              tree = ET.parse("ejercicio4/cla/testing/results.xml")
              root = tree.getroot()
              if "Test failed" in ET.tostring(root).decode():
                print(f"Se encontraron errores durante la ejecución del testbench.")
                sys.exit(1)
              else:
                print(f"Ejecución del testbench exitosa.")
                sys.exit(0)
            except Exception as e:
              print("An error occurred:", e)
              sys.exit(1)


  ejercicio5:
    needs: changes
    if: ${{ needs.changes.outputs.ejercicio5 == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ejercicio5/testing
    steps:
      - name: Checking out repository code
        uses: actions/checkout@v4
      - name: Installing iverilog
        run: sudo apt-get install iverilog
      - name: Setting up Python 3.10
        uses: actions/setup-python@v5
        with: 
          python-version: '3.10'
      - name: Installing dependencies
        run: pip install cocotb==1.8.1
      - run: make
      - name: Checking for errors
        uses: jannekem/run-python-script-action@v1.7
        with:
          script: |
            import xml.etree.ElementTree as ET
            import sys
            try:
              tree = ET.parse("ejercicio5/testing/results.xml")
              root = tree.getroot()
              if "Test failed" in ET.tostring(root).decode():
                print(f"Se encontraron errores durante la ejecución del testbench.")
                sys.exit(1)
              else:
                print(f"Ejecución del testbench exitosa.")
                sys.exit(0)
            except Exception as e:
              print("An error occurred:", e)
              sys.exit(1)










